plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

version = "${minecraft_short_version}-${mod_version}-FABRIC"
archivesBaseName = "${mod_id}"

repositories {
    maven {
        url "https://maven.shedaniel.me/" // for rei
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings(loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${mappings_version}@zip")
    })

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-fabric', version: "${spectrelib_range}"

    modRuntimeOnly "curse.maven:architectury-419699:3984016"
    modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"
    modCompileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    modCompileOnly "mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"

    modRuntimeOnly "curse.maven:architectury-419699:3984016"
    modRuntimeOnly "curse.maven:biomemakeover-412182:3942509"
    modRuntimeOnly "curse.maven:terrablender-565956:3966341"
    modRuntimeOnly "curse.maven:byg-391378:4036205"
    modRuntimeOnly "curse.maven:geckolib-388172:4036063"

    modRuntimeOnly("com.terraformersmc:modmenu:${mod_menu_version}") {
        transitive = false
    }
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")

    include group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-fabric', version: "${spectrelib_version}"
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        commonDatagen {
            client()
            vmArg "-Dbetterworldgen.common_datagen=1"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.modid=betterworldgen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("../Common/src/generated/resources")}"
        }
        fabricDatagen {
            client()
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.modid=betterworldgen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version
    exclude '.cache'
    duplicatesStrategy(DuplicatesStrategy.FAIL)

    filesMatching("fabric.mod.json") {
        expand 'version': project.version, 'fabric_mc_version_range': project.fabric_mc_version_range, 'license': project.license,
                'mod_id': project.mod_id, 'mod_author': project.mod_author, 'mod_description': project.mod_description,
                'mod_name': project.mod_name, 'issue_tracker': project.issue_tracker
    }

    filesMatching("pack.mcmeta") {
        expand 'mod_name': project.mod_name
    }

    filesMatching('*.mixins.json') {
        expand "refmap_target": "${archivesBaseName}-"
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }
}

curseforge {
    if (project.hasProperty('bwCurseApiKey')) {
        project {
            apiKey = project.bwCurseApiKey
            id = project.bwCurseId
            releaseType = "${cf_release}"
            changelog = file(project(":").projectDir.toString() + '/build/libs/changelog.txt')
            addGameVersion "Java 17"
            addGameVersion "Fabric"
            "${cf_versions}".split(',').each {
                addGameVersion "${it}"
            }
            addArtifact(sourcesJar)
            mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))

            relations {
                requiredDependency 'fabric-api'
                optionalDependency 'biome-makeover'
            }

            afterEvaluate {
                uploadTask.dependsOn(remapJar)
            }
        }
        options {
            forgeGradleIntegration = false
        }
    }
}
